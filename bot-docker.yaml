# PandaFuzz Bot Configuration for Docker
# This file is used when running bots in Docker containers

bot:
  # Bot identification
  id: ""                    # Bot ID (auto-generated if empty)
  name: "pandafuzz-bot"     # Human-readable bot name
  
  # Master server configuration
  master_url: "http://master:8080"  # URL of the master server (using Docker service name)
  
  # Bot capabilities
  capabilities:
    - "aflplusplus"         # AFL++ fuzzer support
    - "libfuzzer"           # LibFuzzer support
    # - "honggfuzz"         # Honggfuzz support (if available)
    # - "custom"            # Custom fuzzer support
  
  # Fuzzing configuration
  fuzzing:
    work_dir: "./work"  # Directory for fuzzing operations
    max_jobs: 1
    job_cleanup: true
    corpus_sync: true
    crash_reporting: true
    coverage_reporting: true

  # Resource limits
  resources:
    max_memory_mb: 2048        # Maximum memory in MB
    max_cpu_percent: 80        # Maximum CPU usage percentage
    max_disk_space_mb: 10240   # Maximum disk space in MB (10GB)
    max_open_files: 1024
    max_processes: 100

  # Retry configuration
  retry:
    # Communication-specific retry policy
    communication:
      max_retries: 5
      initial_delay: "1s"
      max_delay: "60s"
      multiplier: 2.0
      jitter: true
      retryable_errors:
        - "connection refused"
        - "timeout"
        - "EOF"
        - "temporary failure"
    # Update recovery retry policy
    update_recovery:
      max_retries: 10
      initial_delay: "5s"
      max_delay: "5m"
      multiplier: 1.5
      jitter: true

  # Timeout configuration
  timeouts:
    master_communication: "30s"  # Timeout for master API calls
    heartbeat_interval: "30s"    # Interval for sending heartbeats
    job_execution: "24h"         # Maximum job execution time
    fuzzer_startup: "60s"        # Maximum time for fuzzer startup
    result_reporting: "30s"      # Timeout for result reporting
    file_upload: "5m"            # Timeout for uploading results

  # Logging configuration
  logging:
    level: "info"              # Log level (debug, info, warn, error)
    format: "json"             # Log format (text, json)
    output: "stdout"           # Log output (stdout, file)
    # file_path: "./logs/bot.log"
    max_size: 100              # Max log file size in MB
    max_backups: 5             # Max number of log backups
    max_age: 7                 # Max age of log files in days