# PandaFuzz Master Configuration
# This file configures the master server that coordinates fuzzing bots

# Server configuration
server:
  host: "0.0.0.0"         # Listen on all interfaces
  port: 8080              # Main HTTP server port
  metrics_port: 9090      # Prometheus metrics port
  enable_metrics: true    # Enable Prometheus metrics endpoint

# Storage configuration
storage:
  type: "sqlite"                           # Database type (sqlite or postgres)
  path: "./data/pandafuzz.db"              # SQLite database path
  # PostgreSQL configuration (when type is "postgres")
  # postgres:
  #   host: "localhost"
  #   port: 5432
  #   database: "pandafuzz"
  #   username: "pandafuzz"
  #   password: "changeme"
  #   ssl_mode: "disable"

# Timeout configuration
timeouts:
  bot_idle: "5m"           # Time before marking idle bot as offline
  bot_heartbeat: "1m"      # Expected heartbeat interval from bots
  job_execution: "24h"     # Maximum job execution time
  update_recovery: "5m"    # Time to wait for master recovery during updates

# Retry configuration
retry:
  max_retries: 3
  initial_delay: "1s"
  max_delay: "30s"
  multiplier: 2.0

# Resource limits
limits:
  max_bots_per_ip: 10       # Maximum bots allowed per IP address
  max_jobs_per_bot: 1       # Maximum concurrent jobs per bot
  max_pending_jobs: 1000    # Maximum jobs in pending queue
  max_crash_size: 10485760  # Maximum crash report size (10MB)
  max_corpus_size: 104857600 # Maximum corpus size per job (100MB)
  max_coverage_reports: 10000 # Maximum coverage reports to store

# Maintenance configuration
maintenance:
  interval: "1h"           # Maintenance check interval
  stale_job_age: "24h"     # Age before considering job stale
  stale_crash_age: "168h"  # Age before archiving crashes (7 days)
  enable_auto_cleanup: true # Enable automatic cleanup of old data

# Security configuration
security:
  enable_auth: false       # Enable authentication
  # auth_token: ""         # Bearer token for authentication
  enable_tls: false        # Enable TLS/HTTPS
  # tls_cert: ""           # Path to TLS certificate
  # tls_key: ""            # Path to TLS private key
  allowed_ips: []          # IP whitelist (empty = allow all)
  rate_limit: 100          # Requests per minute per IP

# Job queue configuration
queue:
  scheduler: "fifo"        # Job scheduling algorithm (fifo, priority, fair)
  max_queue_size: 10000    # Maximum jobs in queue
  enable_priorities: true  # Enable job priorities

# Monitoring configuration
monitoring:
  enable_health_checks: true
  health_check_interval: "30s"
  alert_webhooks: []       # Webhook URLs for alerts
  # - "https://hooks.slack.com/services/xxx"
  
# Logging configuration
logging:
  level: "info"            # Log level (debug, info, warn, error)
  format: "json"           # Log format (text, json)
  output: "stdout"         # Log output (stdout, file)
  # file_path: "./logs/master.log"
  max_size: 100            # Max log file size in MB
  max_backups: 10          # Max number of log backups
  max_age: 30              # Max age of log files in days

# Feature flags
features:
  enable_crash_dedup: true      # Enable crash deduplication
  enable_coverage_merge: true   # Enable coverage merging
  enable_corpus_sync: true      # Enable corpus synchronization
  enable_live_stats: true       # Enable live statistics
  enable_auto_triage: true      # Enable automatic crash triage
  enable_job_templates: false   # Enable job templates